---
source: compiler-core/src/go/tests/case_clause_guards.rs
expression: "fn func(x) {\n    case [] {\n        _ if [] == [ Ok ] -> True\n        _ -> False\n    }\n}\n    "
snapshot_kind: text
---
----- SOURCE CODE
fn func(x) {
    case [] {
        _ if [] == [ Ok ] -> True
        _ -> False
    }
}
    

----- COMPILED GO
package mod_P

import (
  gleam_P "example.com/todo/gleam"
)

const _ = gleam_P.Use_Import
const Use_Import byte = 0

func func π[I gleam_P.Type[I]](x I) gleam_P.Bool_t {
  var _a gleam_P.List_t[gleam_P.Type] = gleam_P.ToList[gleam_P.Type]()
  _ = _a
  if gleam_P.Bool_t(gleam_P.ToList[gleam_P.Func1_t[
    gleam_P.Type,
    gleam_P.Result_t[gleam_P.Type, gleam_P.Type],
  ]]().Equal(gleam_P.ToList[gleam_P.Func1_t[
    gleam_P.Type,
    gleam_P.Result_t[gleam_P.Type, gleam_P.Type],
  ]](
    func(P_0 gleam_P.Type) gleam_P.Result_t[gleam_P.Type, gleam_P.Type] {
      return gleam_P.Ok_c[gleam_P.Type, gleam_P.Type]{P_0}
    },
  ))) {
    return true
  } else {
    return false
  }
}
