---
source: compiler-core/src/go/tests/functions.rs
expression: "\npub fn count(xs, n) {\n  case xs {\n    [] -> n\n    [_, ..xs] -> count(xs, n + 1)\n  }\n}\n"
snapshot_kind: text
---
----- SOURCE CODE

pub fn count(xs, n) {
  case xs {
    [] -> n
    [_, ..xs] -> count(xs, n + 1)
  }
}


----- COMPILED GO
package mod_P

import (
  gleam_P "example.com/todo/gleam"
)

const _ = gleam_P.Use_Import
const Use_Import byte = 0

func Count[M gleam_P.Type[M]](loop_xs gleam_P.List_t[M], loop_n gleam_P.Int_t) gleam_P.Int_t {
  for {
    var xs gleam_P.List_t[M] = loop_xs
    var n gleam_P.Int_t = loop_n
    if xs.HasLength(0) {
      return n
    } else {
      var xsʹ1 gleam_P.List_t[M] = xs.Tail()
      _ = xsʹ1
      loop_xs = xsʹ1
      loop_n = n + 1
    }
  }
}
