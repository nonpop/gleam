---
source: compiler-core/src/go/tests/custom_types.rs
expression: "import other.{Two}\n\npub fn main(x) {\n  case x {\n    Two(a: 1, ..) -> 1\n    other.Two(b: 2, c: c, ..) -> c\n    _ -> 3\n  }\n}\n"
snapshot_kind: text
---
----- SOURCE CODE
import other.{Two}

pub fn main(x) {
  case x {
    Two(a: 1, ..) -> 1
    other.Two(b: 2, c: c, ..) -> c
    _ -> 3
  }
}


----- COMPILED GO
package mod_P

import (
  gleam_P "example.com/todo/gleam"
  other_P "example.com/todo/thepackage/other"
)

const _ = gleam_P.Use_Import
const _ = other_P.Use_Import
const Use_Import byte = 0

func Main(x other_P.One_t) gleam_P.Int_t {
  if gleam_P.Bool_t(x.A.Equal(1)) {
    return 1
  } else if gleam_P.Bool_t(x.B.Equal(2)) {
    var c gleam_P.Int_t = x.C
    _ = c
    return c
  } else {
    return 3
  }
}
