---
source: compiler-core/src/go/tests/case.rs
expression: "\nfn main() {\n  case Ok([\"b c\", \"d\"]) {\n    Ok([\"b \" <> _, \"d\"]) -> 1\n    _ -> 1\n  }\n}\n"
snapshot_kind: text
---
----- SOURCE CODE

fn main() {
  case Ok(["b c", "d"]) {
    Ok(["b " <> _, "d"]) -> 1
    _ -> 1
  }
}


----- COMPILED GO
package mod_P

import (
  gleam_P "example.com/todo/gleam"
  "strings"
)

const _ = gleam_P.Use_Import
const Use_Import byte = 0

func main() gleam_P.Int_t {
  var _a gleam_P.Result_t[gleam_P.List_t[gleam_P.String_t], gleam_P.Type] = gleam_P.Ok_c[
    gleam_P.List_t[gleam_P.String_t],
    gleam_P.Type,
  ]{
    gleam_P.ToList[gleam_P.String_t]("b c", "d"),
  }
  _ = _a
  if _a.IsOk() &&
  _a.AsOk().P_0.HasLength(2) &&
  gleam_P.Bool_t(strings.HasPrefix(string(_a.AsOk().P_0.Head()), "b ")) &&
  gleam_P.Bool_t(_a.AsOk().P_0.Tail().Head().Equal("d")) {
    return 1
  } else {
    return 1
  }
}
