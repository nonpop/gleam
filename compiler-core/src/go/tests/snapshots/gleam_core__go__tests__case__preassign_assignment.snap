---
source: compiler-core/src/go/tests/case.rs
expression: "\nfn go(x) {\n  let y = case x() {\n    True -> 1\n    _ -> 0\n  }\n  y\n}\n"
snapshot_kind: text
---
----- SOURCE CODE

fn go(x) {
  let y = case x() {
    True -> 1
    _ -> 0
  }
  y
}


----- COMPILED GO
package mod_P

import (
  gleam_P "example.com/todo/gleam"
)

const _ = gleam_P.Use_Import
const Use_Import byte = 0

func go π(x gleam_P.Func0_t[gleam_P.Bool_t]) gleam_P.Int_t {
  var y gleam_P.Int_t = (func() gleam_P.Int_t {
    var _a gleam_P.Bool_t = x()
    _ = _a
    if _a {
      return 1
    } else {
      return 0
    }
  })()
  _ = y
  return y
}
