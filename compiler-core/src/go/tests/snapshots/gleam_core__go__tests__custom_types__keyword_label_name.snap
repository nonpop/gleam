---
source: compiler-core/src/go/tests/custom_types.rs
expression: "pub opaque type Thing {\n  Thing(func: Int, var: Nil)\n}\n"
snapshot_kind: text
---
----- SOURCE CODE
pub opaque type Thing {
  Thing(func: Int, var: Nil)
}


----- COMPILED GO
package mod_P

import (
  gleam_P "example.com/todo/gleam"
)

const _ = gleam_P.Use_Import
const Use_Import byte = 0

type thing_c struct {funcʹ gleam_P.Int_t; varʹ gleam_P.Nil_t}

func (c thing_c) Hash() uint32 {
  h := gleam_P.NewHash()
  var hh uint32
  hh = c.funcʹ.Hash()
  if _, err := h.Write([]byte{byte(hh), byte(hh >> 8), byte(hh >> 16), byte(hh >> 24)}); err != nil { panic (err) }
  hh = c.varʹ.Hash()
  if _, err := h.Write([]byte{byte(hh), byte(hh >> 8), byte(hh >> 16), byte(hh >> 24)}); err != nil { panic (err) }
  return h.Sum32()
}
func (c thing_c) Equal(o thing_c) bool {
  _ = o
  if !c.funcʹ.Equal(o.funcʹ) { return false }
  if !c.varʹ.Equal(o.varʹ) { return false }
  return true
}

type Thing_t = thing_c
