---
source: compiler-core/src/go/tests/case.rs
expression: "\nfn anything() -> a {\n  case [] {\n    [a] if False || True -> a\n    _ -> anything()\n  }\n}\n"
snapshot_kind: text
---
----- SOURCE CODE

fn anything() -> a {
  case [] {
    [a] if False || True -> a
    _ -> anything()
  }
}


----- COMPILED GO
package mod_P

import (
  gleam_P "example.com/todo/gleam"
)

const _ = gleam_P.Use_Import
const Use_Import byte = 0

func anything[I gleam_P.Type[I]]() I {
  for {
    var _a gleam_P.List_t[I] = gleam_P.ToList[I]()
    _ = _a
    if _a.HasLength(1) && (false || true) {
      var a I = _a.Head()
      _ = a
      return a
    } else {
      
    }
  }
}
